# ref: https://github.com/rxhanson/Rectangle/blob/master/.github/workflows/build.yml

name: Build

on: [push, pull_request]

permissions: read-all

env:
  XCODE_SCHEME: "EjectKey"
  BUILD_DIR: "build"
  XCODE_ARCHIVE: "EjectKey.xcarchive"
  EXPORT_OPTIONS_PLIST: "exportOptions.plist"
  CODE_SIGN_IDENTITY: "-"
  APP_NAME: "EjectKey.app"
  DMG_NAME: "EjectKey"
  DMG_FILE_NAME: "EjectKey.dmg"
  ZIP_FILE_NAME: "EjectKey.zip"
  DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer

jobs:
  build:
    runs-on: macOS-12
    steps:
    - name: Show Xcode version
      run: xcodebuild -version    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: brew install swiftgen && npm install --global create-dmg
    - name: Create Folder
      run: mkdir EjectKey/Generated
    - name: Set Build Number
      run: xcrun agvtool new-version -all `git rev-list HEAD --count`
    - name: Cache Swift Packages
      uses: actions/cache@v3
      with:
        path: SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Build
      run: xcodebuild -scheme "$XCODE_SCHEME" archive CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" -archivePath "$BUILD_DIR/$XCODE_ARCHIVE" -skipPackagePluginValidation -clonedSourcePackagesDirPath SourcePackages
    - name: Export
      run: |
        plutil -convert xml1 - -o "$EXPORT_OPTIONS_PLIST" << EOF
          {
            "destination": "export",
            "method": "mac-application"
          }
        EOF
        xcodebuild -exportArchive -archivePath "$BUILD_DIR/$XCODE_ARCHIVE" -exportPath "$BUILD_DIR" -exportOptionsPlist "$EXPORT_OPTIONS_PLIST"
    - name: Resign App
      run: codesign --force --deep -s "$CODE_SIGN_IDENTITY" "$BUILD_DIR/$APP_NAME"
    - name: Create DMG
      run: create-dmg "$BUILD_DIR/$APP_NAME"
      continue-on-error: true
    - name: Rename DMG
      run: mv *.dmg "$DMG_FILE_NAME"
    - name: Upload DMG
      uses: actions/upload-artifact@v3
      with:
        name: DMG
        path: ${{ env.DMG_FILE_NAME }}
    - name: Compress ZIP
      run: zip -ry "$ZIP_FILE_NAME" "$APP_NAME"
      working-directory: ${{ env.BUILD_DIR }}
    - name: Move ZIP
      run: mv "$BUILD_DIR/$ZIP_FILE_NAME" "$ZIP_FILE_NAME"
    - name: Upload ZIP
      uses: actions/upload-artifact@v3
      with:
        name: ZIP
        path: ${{ env.ZIP_FILE_NAME }}

  update_release_draft:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download DMG
        uses: actions/download-artifact@v3
        with:
          name: DMG
          path: ${{ env.DMG_FILE_NAME }}
      - name: Download ZIP
        uses: actions/download-artifact@v3
        with:
          name: ZIP
          path: ${{ env.ZIP_FILE_NAME }}
      - name: Create Release Draft
        id: create-draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        run: gh release upload --clobber ${{ env.VERSION }} ${{ env.FILES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.create-draft.outputs.tag_name }}
          FILES: ${{ env.DMG_FILE_NAME }} ${{ env.ZIP_FILE_NAME }}
